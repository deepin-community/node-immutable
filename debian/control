Source: node-immutable
Section: javascript
Priority: optional
Maintainer: Debian Javascript Maintainers <pkg-javascript-devel@lists.alioth.debian.org>
Uploaders: Pirate Praveen <praveen@debian.org>
Testsuite: autopkgtest-pkg-nodejs
Build-Depends:
 debhelper-compat (= 13)
 , dh-sequence-nodejs
 , jest <!nocheck>
 , rollup
 , node-estraverse
 , node-rollup-plugin-buble
 , node-rollup-plugin-commonjs
 , node-rollup-plugin-json
 , node-typescript <!nocheck>
 , node-uglify-js
 , node-unique-string <!nocheck>
 , ts-jest <!nocheck>
Standards-Version: 4.6.2
Homepage: https://facebook.github.com/immutable-js
Vcs-Git: https://salsa.debian.org/js-team/node-immutable.git
Vcs-Browser: https://salsa.debian.org/js-team/node-immutable
Rules-Requires-Root: no

Package: node-immutable
Architecture: all
Depends:
 ${misc:Depends}
Multi-Arch: foreign
Description: Immutable Data Collections
 Immutable data cannot be changed once created, leading to much simpler
 application development, no defensive copying, and enabling advanced
 memoization and change detection techniques with simple logic. Persistent data
 presents a mutative API which does not update the data in-place, but instead
 always yields new updated data.
 .
 Immutable.js provides many Persistent Immutable data structures including:
 List, Stack, Map, OrderedMap, Set, OrderedSet and Record.
 .
 These data structures are highly efficient on modern JavaScript VMs by using
 structural sharing via [hash maps tries][] and [vector tries][] as popularized
 by Clojure and Scala, minimizing the need to copy or cache data.
 .
 Immutable also provides a lazy Seq, allowing efficient chaining of collection
 methods like map and filter without creating intermediate representations.
 Create some Seq with Range and Repeat.
 .
 Node.js is an event-based server-side JavaScript engine.
